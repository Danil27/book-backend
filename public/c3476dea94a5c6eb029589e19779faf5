# Описание задачи

## Написать web api, используя принципы REST

    1. Результат должен обеспечивать возможность выполнения CRUD операций над описанными ниже моделями.
        1.1. Модель “книга”. Свойства: название, год издания, жанр, автор, редакция
        1.2. Модель “автор”. Свойства: имя, дата рождения, книга
        1.3. Свойства автор и книга реализуют отношение между моделями. При этом книга может быть написана несколькими авторами, например сборник рассказов или произведение в соавторстве. Очевидно, один автор так же может иметь несколько книг.
    2. Cвойство книги “жанр” должно быть реализовано отдельной моделью, при этом для данной модели должен быть написан seeder для заполнения таблицы предопределенными данными. Seeder должен выполняться при запуске приложения. Список жанров для предзаполнения составить самостоятельно, достаточно будет трех записей. Для модели жанра достаточно реализовать операцию read, т.е. получение списка жанров. Метод для данной операции на своё усмотрение может быть описан как в отдельном контроллере, так и в контроллере книг.
    3. Помимо данных о книге должна быть возможность скачать и загрузить саму книгу, здесь это будет любой txt файл. Детали реализации на ваше усмотрение. 
    4. Дополнительно: добавить JWT аутентификацию. Неаутентифицированным пользователям доступна только READ операция.
        4.1. Добавить авторизацию по принципу ролей администратор/обычный пользователь. В таком случае обычный пользователь может получить список книг и скачать файлы, но остальные операции ему недоступны. Желательно добавить создание пользователя администратора аналогично жанрам в seeder (пункт 2). 



## Требования

    1. Фреймворк для написания выбрать на своё усмотрение, предпочтительный вариант - NestJS
    2. Обязательно использование Typescript
    3. В качестве решения принимается ссылка на репозиторий в гитхаб с инструкцией по сборке в readme, плюсом будет размещение решения на удобном вам хостинге



